apiVersion: v1
kind: Template
metadata:
  name: redis-sentry
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      generation: 1
      labels:
        run: redis
        service: sentry
        app: sentry
      name: redis
    spec:
      replicas: 1
      selector:
        run: redis
      strategy:
        activeDeadlineSeconds: 21600
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            run: redis
            app: sentry
        spec:
          containers:
          - image: registry.centos.org/centos/redis-32-centos7:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 6379
              timeoutSeconds: 1
            name: redis
            ports:
            - containerPort: 6379
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 6379
              timeoutSeconds: 1
            resources:
              requests:
                memory: "512Mi"
                cpu: "500m"
              limits:
                memory: "512Mi"
                cpu: "500m"
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/lib/redis/data/
              name: sentry-redis-pvc
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - name: sentry-redis-pvc
            persistentVolumeClaim:
              claimName: sentry-redis-pvc
      test: false
      triggers:
      - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        run: redis
        service: sentry
        app: sentry
      name: redis
    spec:
      ports:
      - port: 6379
        protocol: TCP
        targetPort: 6379
      selector:
        run: redis
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        # Change storage class for your deployment if needed.
        # volume.beta.kubernetes.io/storage-class: ceph-dyn-datahub-paas
      name: sentry-redis-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
